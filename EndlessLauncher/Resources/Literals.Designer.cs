//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EndlessLauncher.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Literals {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Literals() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EndlessLauncher.Resources.Literals", typeof(Literals).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Support.
        /// </summary>
        public static string button_customer_support {
            get {
                return ResourceManager.GetString("button_customer_support", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go back.
        /// </summary>
        public static string button_go_back {
            get {
                return ResourceManager.GetString("button_go_back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open encyclopedia.
        /// </summary>
        public static string button_open_kiwix {
            get {
                return ResourceManager.GetString("button_open_kiwix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Explore content.
        /// </summary>
        public static string button_open_kolibri {
            get {
                return ResourceManager.GetString("button_open_kolibri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart and try Endless OS.
        /// </summary>
        public static string button_restart_to_endless {
            get {
                return ResourceManager.GetString("button_restart_to_endless", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What&apos;s the right port?.
        /// </summary>
        public static string button_whats_the_right_port {
            get {
                return ResourceManager.GetString("button_whats_the_right_port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here.
        /// </summary>
        public static string click_here {
            get {
                return ResourceManager.GetString("click_here", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please contact us for additional support..
        /// </summary>
        public static string error_contact {
            get {
                return ResourceManager.GetString("error_contact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error details.
        /// </summary>
        public static string error_details {
            get {
                return ResourceManager.GetString("error_details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown system verification error. Please contact us for additional support..
        /// </summary>
        public static string error_system_GenericVerificationError {
            get {
                return ResourceManager.GetString("error_system_GenericVerificationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your computer does not have enough memory available (2GiB of RAM is required). The Endless Key cannot be used on this computer to restart into Endless OS..
        /// </summary>
        public static string error_system_InsufficientRAM {
            get {
                return ResourceManager.GetString("error_system_InsufficientRAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Endless Key does not have the security privileges necessary to function. Remove and re-insert the Endless Key, and accept the Windows UAC prompt when it appears..
        /// </summary>
        public static string error_system_NoAdminRights {
            get {
                return ResourceManager.GetString("error_system_NoAdminRights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your system does not have a 64-bit processor (CPU). The Endless Key cannot be used on this computer to restart into Endless OS..
        /// </summary>
        public static string error_system_Not64BitSystem {
            get {
                return ResourceManager.GetString("error_system_Not64BitSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Endless Key is in the wrong USB port - Try a different USB port.
        /// </summary>
        public static string error_system_NotUSB30Port {
            get {
                return ResourceManager.GetString("error_system_NotUSB30Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your computer has no USB 3.0 ports. The Endless Key cannot be used on this computer to restart into Endless OS..
        /// </summary>
        public static string error_system_NoUSBPortsFound {
            get {
                return ResourceManager.GetString("error_system_NoUSBPortsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your computer&apos;s processor (CPU) is not powerful enough - The Endless Key requires a multi-core processor. The Endless Key cannot be used on this computer to restart into Endless OS..
        /// </summary>
        public static string error_system_SingleCoreProcessor {
            get {
                return ResourceManager.GetString("error_system_SingleCoreProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your computer does not have a UEFI BIOS. The Endless Key cannot be used on this computer to restart into Endless OS..
        /// </summary>
        public static string error_system_UnsupportedFirmware {
            get {
                return ResourceManager.GetString("error_system_UnsupportedFirmware", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your computer&apos;s version of Windows is not supported - The Endless Key only supports Windows 10. The Endless Key cannot be used on this computer to restart into Endless OS..
        /// </summary>
        public static string error_system_UnsupportedOS {
            get {
                return ResourceManager.GetString("error_system_UnsupportedOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure that you are running the Endless Launcher from the Endless Key, and that you have not copied it to your hard drive. Additionally, there might be an issue with your Endless Key, please contact us for additional support..
        /// </summary>
        public static string error_system_UsbDeviceNotFound {
            get {
                return ResourceManager.GetString("error_system_UsbDeviceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown error. Please contact us for additional support..
        /// </summary>
        public static string error_unknown {
            get {
                return ResourceManager.GetString("error_unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to restart computer into Endless OS.
        /// </summary>
        public static string launch_failed {
            get {
                return ResourceManager.GetString("launch_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to restart computer into Endless OS..
        /// </summary>
        public static string launch_not_supported {
            get {
                return ResourceManager.GetString("launch_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug log file.
        /// </summary>
        public static string log_file_title {
            get {
                return ResourceManager.GetString("log_file_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More information.
        /// </summary>
        public static string more_information {
            get {
                return ResourceManager.GetString("more_information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Need help?.
        /// </summary>
        public static string need_help {
            get {
                return ResourceManager.GetString("need_help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to.
        /// </summary>
        public static string welcome_partial_title {
            get {
                return ResourceManager.GetString("welcome_partial_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Endless Launcher.
        /// </summary>
        public static string window_title {
            get {
                return ResourceManager.GetString("window_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some devices have USB 2.0 and USB 3.0 ports. Endless OS can only be run through a USB 3.0 port..
        /// </summary>
        public static string wrong_port_info_msg1 {
            get {
                return ResourceManager.GetString("wrong_port_info_msg1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USB 3.0 ports are sometimes blue or have an &quot;SS&quot; mark to distinguish them from USB 2.0 ports..
        /// </summary>
        public static string wrong_port_info_msg2 {
            get {
                return ResourceManager.GetString("wrong_port_info_msg2", resourceCulture);
            }
        }
    }
}
