<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="button_customer_support" xml:space="preserve">
    <value>Customer Support</value>
  </data>
  <data name="button_go_back" xml:space="preserve">
    <value>Go back</value>
  </data>
  <data name="button_open_kiwix" xml:space="preserve">
    <value>Open encyclopedia</value>
  </data>
  <data name="button_open_kolibri" xml:space="preserve">
    <value>Explore content</value>
  </data>
  <data name="button_restart_to_endless" xml:space="preserve">
    <value>Restart and try Endless OS</value>
  </data>
  <data name="button_whats_the_right_port" xml:space="preserve">
    <value>What's the right port?</value>
  </data>
  <data name="click_here" xml:space="preserve">
    <value>Click here</value>
  </data>
  <data name="error_contact" xml:space="preserve">
    <value>Please contact us for additional support.</value>
  </data>
  <data name="error_details" xml:space="preserve">
    <value>Error details</value>
  </data>
  <data name="error_system_GenericVerificationError" xml:space="preserve">
    <value>Unknown system verification error. Please contact us for additional support.</value>
  </data>
  <data name="error_system_InsufficientRAM" xml:space="preserve">
    <value>Your computer does not have enough memory available (2GiB of RAM is required). The Endless Key cannot be used on this computer to restart into Endless OS.</value>
  </data>
  <data name="error_system_NoAdminRights" xml:space="preserve">
    <value>The Endless Key does not have the security privileges necessary to function. Remove and re-insert the Endless Key, and accept the Windows UAC prompt when it appears.</value>
  </data>
  <data name="error_system_Not64BitSystem" xml:space="preserve">
    <value>Your system does not have a 64-bit processor (CPU). The Endless Key cannot be used on this computer to restart into Endless OS.</value>
  </data>
  <data name="error_system_NotUSB30Port" xml:space="preserve">
    <value>The Endless Key is in the wrong USB port - Try a different USB port</value>
  </data>
  <data name="error_system_NoUSBPortsFound" xml:space="preserve">
    <value>Your computer has no USB 3.0 ports. The Endless Key cannot be used on this computer to restart into Endless OS.</value>
  </data>
  <data name="error_system_SingleCoreProcessor" xml:space="preserve">
    <value>Your computer's processor (CPU) is not powerful enough - The Endless Key requires a multi-core processor. The Endless Key cannot be used on this computer to restart into Endless OS.</value>
  </data>
  <data name="error_system_UnsupportedFirmware" xml:space="preserve">
    <value>Your computer does not have a UEFI BIOS. The Endless Key cannot be used on this computer to restart into Endless OS.</value>
  </data>
  <data name="error_system_UnsupportedOS" xml:space="preserve">
    <value>Your computer's version of Windows is not supported - The Endless Key only supports Windows 10. The Endless Key cannot be used on this computer to restart into Endless OS.</value>
  </data>
  <data name="error_system_UsbDeviceNotFound" xml:space="preserve">
    <value>Make sure that you are running the Endless Launcher from the Endless Key, and that you have not copied it to your hard drive. Additionally, there might be an issue with your Endless Key, please contact us for additional support.</value>
  </data>
  <data name="error_unknown" xml:space="preserve">
    <value>Unknown error. Please contact us for additional support.</value>
  </data>
  <data name="launch_failed" xml:space="preserve">
    <value>Failed to restart computer into Endless OS</value>
  </data>
  <data name="launch_not_supported" xml:space="preserve">
    <value>Unable to restart computer into Endless OS.</value>
  </data>
  <data name="log_file_title" xml:space="preserve">
    <value>Debug log file</value>
  </data>
  <data name="more_information" xml:space="preserve">
    <value>More information</value>
  </data>
  <data name="need_help" xml:space="preserve">
    <value>Need help?</value>
  </data>
  <data name="welcome_partial_title" xml:space="preserve">
    <value>Welcome to</value>
  </data>
  <data name="window_title" xml:space="preserve">
    <value>Endless Launcher</value>
  </data>
  <data name="wrong_port_info_msg1" xml:space="preserve">
    <value>Some devices have USB 2.0 and USB 3.0 ports. Endless OS can only be run through a USB 3.0 port.</value>
  </data>
  <data name="wrong_port_info_msg2" xml:space="preserve">
    <value>USB 3.0 ports are sometimes blue or have an "SS" mark to distinguish them from USB 2.0 ports.</value>
  </data>
</root>